
import command.*;
import drawer.*;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionListener;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;

import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;

public class Main extends JFrame implements MouseMotionListener, WindowListener{

	
	int index;
	// 그리기 이력
	private MarcoCommand history=new MarcoCommand();
	// 그리는 영역
	private DrawCanvas canvas=new DrawCanvas(400,400,history);
	// 삭제 버튼
	private JButton clearButton=new JButton("clear");
	
	String color_array[]={"Red","Green","Blue","Black","White"};
	

	
	private JComboBox<String> jbox=new JComboBox<String>(color_array);
	
	// 생성자
	public Main(String title){
		super(title);
		
		this.addWindowListener(this);
		canvas.addMouseMotionListener(this);
		clearButton.addActionListener(e->{
			history.clear();
			canvas.repaint();
		});
		

		
		Box buttonBox=new Box(BoxLayout.X_AXIS);
		buttonBox.add(clearButton);
		buttonBox.add(jbox);
		
		Box mainBox=new Box(BoxLayout.Y_AXIS);
		mainBox.add(buttonBox);
		mainBox.add(canvas);
		
		jbox.addActionListener(new ActionListener(){

			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				JComboBox<String> c=(JComboBox<String>)e.getSource();
				 index=c.getSelectedIndex();
				 
				 
				 if(index==0){
					 Command cmd=new SetColor(canvas,Color.red);
					 history.append(cmd);
					 cmd.execute();
					 repaint();
				 }
				 if(index==1){
					 Command cmd=new SetColor(canvas,Color.green);
					 history.append(cmd);
					 cmd.execute();	
					 repaint();

					}
				 if(index==2){
					 Command cmd=new SetColor(canvas,Color.blue);
					 history.append(cmd);
					 cmd.execute();
					 repaint();

					}
				 if(index==3){
					 Command cmd=new SetColor(canvas,Color.black);
					 history.append(cmd);
					 cmd.execute();
					 repaint();

					}
				 if(index==4){
					 Command cmd=new SetColor(canvas,Color.white);
					 history.append(cmd);
					 cmd.execute();
					 repaint();

					}
			}
			
		});
		getContentPane().add(mainBox);
		
		pack();
		setVisible(true);
		
	}
	
	@Override
	public void mouseMoved(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}	
	@Override
	public void mouseDragged(MouseEvent e) {
		// TODO Auto-generated method stub
		Command cmd=new DrawCommand(canvas,e.getPoint());
		history.append(cmd);
		cmd.execute();
		
	}
	
	// WindowListener 용
	@Override
	public void windowOpened(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void windowClosing(WindowEvent e) {
		// TODO Auto-generated method stub
		System.exit(0);
	}

	@Override
	public void windowClosed(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void windowIconified(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void windowDeiconified(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void windowActivated(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void windowDeactivated(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}

	

	
	public static void main(String[] args){
		new Main("Command Pattern Sample");
	}

}

