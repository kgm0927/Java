package chapter08;


import java.io.*;
import java.util.*;




/*
 * 
 * 
 * 
 * 
 * 
 * 	FileWriter를 이용한 텍스트 파일 쓰기
 * 
 * 
 * 이 절에서는 FileWriter를 이용하여 텍스트를 파일에 저장하는 방법을 알아보자. <표 8-4>는 문자 출력
 * 스트림은 FileWriter와 OutputStreamWriter의 생성자를, <표 8-5>는 Writer, OutputStreamWriter
 * ,FileWriter의 주요 공통 메서드를 보여준다.
 * 
 * 
 * 
 * 		* 파일 출력 스트림 생성
 * 
 * 다음 코드는 c:\Temp\test.txt 파일을 열어 스트림과 연결한다. 파일이 없는 경우 빈 파일을 생성하며,
 * 이 파일이 있는 경우 파일 내용을 지우고 파일의 처음부터 쓸 준비를 한다.
 * 
 * 
 * 
 * 
 * 		* 파일 쓰기
 * 
 * fout 스트림의 write() 메소드를 이용하면 문자 단위로 파일에 저장할 수 있다. 다음은 'A'를 파일에 쓰는 코드이다.
 * 
 * 
 * fout.write('A');
 * 
 * 
 * write()를 다음과 같이 이용하면 한 번에 한 '블록'씩 쓸 수 있다.
 * 
 * 		char [] buf=new char[1024];
 * 		fout.write(buf,0,buf.length); // buf[] 배열의 처음부터 배열 크기(1024개 문자)만큼 쓰기
 *
 * 
 * 
 * 
 *		* 스트림 닫기
 *
 * 텍스트를 모두 파일에 저장하였으면 close()를 호출하여 스트림을 닫는다. 스트림을 닫으면 연결된 파일도 닫힌다.
 * 
 * 
 * 		fout.close(); // 스트림을 닫는다. 더 이상 스트림에 기록할 수 없다.
 * 
 * 
 * 
 * 
 * 
 * 
 * <표 8-4> FileWriter와 OutputStreamWriter의 생성자
 * 
 * ------------------------------------------------------------------------------------------------------
 * OutputStreamWriter(OutputStream out)				| out에 출력하는 기본 문자 집합의 OutputStreamWriter 생성
 * ------------------------------------------------------------------------------------------------------
 * OutputStreamWriter(OutputStream out,Charset cs)  | out에 출력하는 cs 문자 집합의 OutputStreamWriter 생성
 * ------------------------------------------------------------------------------------------------------
 * OutputStreamWriter								| charsetName 문자 집합의 OutputStreamWriter 생성
 * (OutputStream out,String charsetName)			|
 * ------------------------------------------------------------------------------------------------------
 * FileWriter(File file)							| file에 데이터를 저장할 FileWriter 생성
 * ------------------------------------------------------------------------------------------------------
 * FileWriter(String name)							| name 파일에 데이터를 저장할 FileWriter 생성
 * ------------------------------------------------------------------------------------------------------
 * FileWriter(File file,boolean append)				| FileWriter를 생성하여 append가 true이면 파일의 마지막부터 데이터를
 * 													| 를 저장(적힌 내용에서 추가한다는 의미)
 * ------------------------------------------------------------------------------------------------------
 * FileWriter(String name, boolean append)			| FileWriter를 생성하여 append가 true이면 파일의 마지막부터 
 * 													| 데이터를 저장(적힌 내용에서 추가한다는 의미)
 * ------------------------------------------------------------------------------------------------------
 * 
 * 
 * 
 * 
 * 
 * <표 8-5> FileWriter와 OutputStreamWriter의 주요 메소드
 * 
 * ----------------------------------------------------------------------------------------------------------
 * 	void write(int c)		| c를 char로 변환하여 한 개의 문자 출력
 * ----------------------------------------------------------------------------------------------------------
 * 	void write(String str)	| 문자열 str 출력
 * ----------------------------------------------------------------------------------------------------------
 * 	void write(char[]cbuf,	| 인덱스 off부터 len개의 문자를 str 문자열에서 출력
 * 	int off,int len)		|
 * ----------------------------------------------------------------------------------------------------------
 *  void write(char[]cbuf,	| 인덱스 off부터 len개의 문자를 배열 cbuf에서 출력
 *  int off,int len)		|
 *  ---------------------------------------------------------------------------------------------------------
 *  void flush()			| 스트림에 남아있는 데이터 모두 출력
 *  ---------------------------------------------------------------------------------------------------------
 * 	String getEncoding()    | 스트림이 사용하는 문자 집합의 이름 리턴
 *  ---------------------------------------------------------------------------------------------------------
 *  void close()			| 출력 스트림을 닫고 관련된 시스템 자원 해제
 *  ---------------------------------------------------------------------------------------------------------
 * 
 * 
 * */





// page.458
//  Scanner를 이용하여 입력받은 데이터를 c:\Temp\test.txt 파일에 저장하는 프로그램을 작성하라.
public class FileWriterEx {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner scanner=new Scanner(System.in);
		
		FileWriter fout=null;
		
		int c;
		try{
			fout=new FileWriter("c:\\temp\\Hangul.txt");
			
			while(true){
				String line=scanner.nextLine();
				
				if(line.length()==0)
					break;
				
				fout.write(line,0,line.length());
				fout.write("\r\n",0,2);
				
			}
			fout.close();
			
		}catch(IOException e){
			
		}
	}

}
